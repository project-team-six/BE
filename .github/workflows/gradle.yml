name: CD with Gradle
# 언제 이 파일의 내용이 실행될 것인지 정의
on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
# 코드의 내용을 이 파일을 실행하여 action을 수행하는주체(Github Actions에서 사용하는 VM)가 읽을 수 있도록 허용
env:
  PROJECT_NAME: cubeninggen
  BUCKET_NAME: cicd-sobun-bucket
  CODE_DEPLOY_APP_NAME: cicd
  DEPLOYMENT_GROUP_NAME: cicd-module
# 실제 실행될 내용들을 정의
jobs:
  build:
    runs-on: ubuntu-latest  # ubuntu 최신 버전에서 script를 실행
    steps:
      # 지정한 저장소(현재 REPO)에서 코드를 워크플로우 환경으로 가져오도록 하는 github action
      - uses: actions/checkout@v3
      # open jdk 17 버전 환경을 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      # gradle을 통해 소스를 빌드
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test
      - name: Make Zip File
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
      - name: Code Deploy To EC2 instance
        run: aws deploy create-deployment
          --application-name $CODE_DEPLOY_APP_NAME
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name $DEPLOYMENT_GROUP_NAME
          --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
